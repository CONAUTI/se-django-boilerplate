name: Build and Deploy to Google Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  REGION: us-central1
  # SERVICE_ACCOUNT_EMAIL: ${{ .SERVICE_ACCOUNT_EMAIL }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  HTTP_PORT: 8080
  SECRET_KEY: ${{ secrets.PROJECT_ID }}

jobs:
  package:
    name: register image (prod)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup dependencies
        run: sudo apt-get install -y jq make

      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          with-owner: 'false'
          string-case: 'lowercase'

      - id: "auth"
        uses: google-github-actions/auth@v1.1.1
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Authorize Docker push
        run: gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Copy requirements to docker
        run: |  
          make ct.copy DEST_DIR=prod

      - name: Build and tag the docker image
        run: |-
          docker build \
           --build-arg APP_ENV=production \
           --build-arg REQUIREMENTS_PATH=app/requirements.txt \
           -f docker/prod/Dockerfile . --tag $REGION-docker.pkg.dev/$PROJECT_ID/${{ steps.repo-name.outputs.repository-name }}/${{ steps.repo-name.outputs.repository-name }}:$GITHUB_SHA

      - name: Push the image to the Google Artifact Registry (GAR)
        run: |-
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/${{ steps.repo-name.outputs.repository-name }}/${{ steps.repo-name.outputs.repository-name }}:$GITHUB_SHA

  deploy:
    name: deploy in cloud run (production)
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup dependencies
        run: sudo apt-get install -y jq make

      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          with-owner: 'false'
          string-case: 'lowercase'

      - id: "auth"
        uses: google-github-actions/auth@v1.1.1
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Authorize Docker push
        run: gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Copy requirements to docker
        run: |
          make ct.copy DEST_DIR=prod

      # - name: Extract service account email from JSON
      #   id: sa-email
      #   run: |
      #     echo "${{ secrets.GCP_SA_KEY }}" > sa-key.json
      #     echo "SERVICE_ACCOUNT_EMAIL=$(jq -r '.client_email' sa-key.json)" >> $GITHUB_ENV

      - name: Deploy
        run: |-
          gcloud run deploy ${{ steps.repo-name.outputs.repository-name }} \
          --region $REGION \
          --image $REGION-docker.pkg.dev/$PROJECT_ID/${{ steps.repo-name.outputs.repository-name }}/${{ steps.repo-name.outputs.repository-name }}:$GITHUB_SHA \
          --platform "managed" \
          --service-account 'se-django-boilerplate@conauti-core.iam.gserviceaccount.com' \
          --port $HTTP_PORT \
          --set-env-vars PROJECT_ID=$PROJECT_ID,REGION=$REGION,SECRET_KEY=$SECRET_KEY \
          --quiet

      - name: Hacer el servicio p√∫blico (Permitir invocaciones no autenticadas)
        run: |-
          gcloud run services add-iam-policy-binding ${{ steps.repo-name.outputs.repository-name }} \
          --region $REGION \
          --member="allUsers" \
          --role="roles/run.invoker"